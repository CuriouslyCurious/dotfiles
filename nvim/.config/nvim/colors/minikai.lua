-- Made with 'mini.colors' module of https://github.com/echasnovski/mini.nvim

if vim.g.colors_name ~= nil then vim.cmd('highlight clear') end
vim.g.colors_name = "minikai"

-- Highlight groups
local hi = vim.api.nvim_set_hl

hi(0, "ALEErrorSign", { link = "DiagnosticSignError" })
hi(0, "ALEWarningSign", { link = "DiagnosticSignWarn" })
hi(0, "Boolean", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "BufferCurrent", { link = "TabLineSel" })
hi(0, "BufferCurrentIndex", { ctermfg = 221, fg = "#f4c069" })
hi(0, "BufferCurrentMod", { bg = "#1f292d", bold = true, ctermbg = 235, ctermfg = 221, fg = "#f4c069" })
hi(0, "BufferCurrentSign", { link = "HintMsg" })
hi(0, "BufferCurrentTarget", { link = "BufferCurrentSign" })
hi(0, "BufferInactive", { link = "BufferVisible" })
hi(0, "BufferInactiveIndex", { bg = "#2d2e27", ctermbg = 236, ctermfg = 221, fg = "#f4c069" })
hi(0, "BufferInactiveMod", { link = "BufferVisibleMod" })
hi(0, "BufferInactiveSign", { link = "BufferVisibleSign" })
hi(0, "BufferInactiveTarget", { link = "BufferVisibleTarget" })
hi(0, "BufferTabpageFill", { link = "TabLineFill" })
hi(0, "BufferTabpages", { bold = true, reverse = true })
hi(0, "BufferVisible", { link = "TabLine" })
hi(0, "BufferVisibleIndex", { bg = "#2d2e27", ctermbg = 236, ctermfg = 221, fg = "#f4c069" })
hi(0, "BufferVisibleMod", { bg = "#2d2e27", ctermbg = 236, ctermfg = 231, fg = "#cdd3de", italic = true })
hi(0, "BufferVisibleSign", { link = "BufferVisible" })
hi(0, "BufferVisibleTarget", { bg = "#2d2e27", bold = true, ctermbg = 236, ctermfg = 231, fg = "#cdd3de" })
hi(0, "Character", { ctermfg = 208, fg = "#fd9720" })
hi(0, "CmpDocumentationBorder", { link = "FloatBorder" })
hi(0, "CmpItemAbbr", { fg = "#cdd3de" })
hi(0, "CmpItemAbbrDefault", { fg = "#cdd3de" })
hi(0, "CmpItemAbbrDeprecated", { fg = "#808080" })
hi(0, "CmpItemAbbrDeprecatedDefault", { fg = "#808080" })
hi(0, "CmpItemAbbrMatch", { fg = "#cdd3de" })
hi(0, "CmpItemAbbrMatchDefault", { fg = "#cdd3de" })
hi(0, "CmpItemAbbrMatchFuzzy", { fg = "#cdd3de" })
hi(0, "CmpItemAbbrMatchFuzzyDefault", { fg = "#cdd3de" })
hi(0, "CmpItemKind", { fg = "#fc3488" })
hi(0, "CmpItemKindClass", { fg = "#fc3488" })
hi(0, "CmpItemKindClassDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindColor", { fg = "#fc3488" })
hi(0, "CmpItemKindColorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstant", { fg = "#fc3488" })
hi(0, "CmpItemKindConstantDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstructor", { fg = "#fc3488" })
hi(0, "CmpItemKindConstructorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindDefault", { fg = "#fc3488" })
hi(0, "CmpItemKindEnum", { fg = "#fc3488" })
hi(0, "CmpItemKindEnumDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEnumMember", { fg = "#fc3488" })
hi(0, "CmpItemKindEnumMemberDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEvent", { fg = "#fc3488" })
hi(0, "CmpItemKindEventDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindField", { fg = "#fc3488" })
hi(0, "CmpItemKindFieldDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFile", { fg = "#fc3488" })
hi(0, "CmpItemKindFileDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFolder", { fg = "#fc3488" })
hi(0, "CmpItemKindFolderDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFunction", { fg = "#fc3488" })
hi(0, "CmpItemKindFunctionDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindInterface", { fg = "#fc3488" })
hi(0, "CmpItemKindInterfaceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindKeyword", { fg = "#fc3488" })
hi(0, "CmpItemKindKeywordDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindMethod", { fg = "#fc3488" })
hi(0, "CmpItemKindMethodDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindModule", { fg = "#fc3488" })
hi(0, "CmpItemKindModuleDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindOperator", { fg = "#fc3488" })
hi(0, "CmpItemKindOperatorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindProperty", { fg = "#fc3488" })
hi(0, "CmpItemKindPropertyDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindReference", { fg = "#fc3488" })
hi(0, "CmpItemKindReferenceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindSnippet", { fg = "#fc3488" })
hi(0, "CmpItemKindSnippetDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindStruct", { fg = "#fc3488" })
hi(0, "CmpItemKindStructDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindText", { fg = "#fc3488" })
hi(0, "CmpItemKindTextDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindTypeParameter", { fg = "#fc3488" })
hi(0, "CmpItemKindTypeParameterDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindUnit", { fg = "#fc3488" })
hi(0, "CmpItemKindUnitDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindValue", { fg = "#fc3488" })
hi(0, "CmpItemKindValueDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindVariable", { fg = "#fc3488" })
hi(0, "CmpItemKindVariableDefault", { link = "CmpItemKind" })
hi(0, "CmpItemMenu", { fg = "#cdd3de" })
hi(0, "CmpItemMenuDefault", { fg = "#cdd3de" })
hi(0, "CmpWindowScrollThumb", { bold = true, ctermfg = 231, fg = "#cdd3de" })
hi(0, "CocErrorHighlight", { link = "DiagnosticUnderlineError" })
hi(0, "CocErrorSign", { link = "DiagnosticSignError" })
hi(0, "CocHintHighlight", { link = "DiagnosticUnderlineHint" })
hi(0, "CocHintSign", { link = "DiagnosticSignHint" })
hi(0, "CocInfoHighlight", { link = "DiagnosticUnderlineInfo" })
hi(0, "CocInfoSign", { link = "DiagnosticSignInfo" })
hi(0, "CocWarningHighlight", { link = "DiagnosticUnderlineWarn" })
hi(0, "CocWarningSign", { link = "DiagnosticSignWarn" })
hi(0, "ColorColumn", { reverse = true })
hi(0, "Comment", { ctermfg = 244, fg = "#808080", italic = true })
hi(0, "Conceal", { ctermfg = 236, fg = "#2d2e27" })
hi(0, "Conditional", { ctermfg = 219, fg = "#fc3488", italic = true })
hi(0, "Constant", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "CratesNvimPopupEnabled", { ctermfg = 2, fg = "#23ab49" })
hi(0, "CratesNvimPopupPillBorder", { ctermfg = 242, fg = "#3a3a3a" })
hi(0, "CratesNvimPopupPillText", { bg = "#3a3a3a", ctermbg = 242, ctermfg = 15, fg = "#e0e0e0" })
hi(0, "CratesNvimPopupTransitive", { ctermfg = 4, fg = "#238bb9" })
hi(0, "Cursor", { reverse = true })
hi(0, "CursorColumn", { bg = "#383a3e", ctermbg = 239 })
hi(0, "CursorIM", { link = "Cursor" })
hi(0, "CursorLine", { bg = "#383a3e", ctermbg = 239 })
hi(0, "CursorLineNr", { ctermfg = 214, fg = "#f0af00" })
hi(0, "Debug", { link = "WarningMsg" })
hi(0, "Define", { ctermfg = 219, fg = "#fc3488", nocombine = true })
hi(0, "DefinitionCount", { link = "Number" })
hi(0, "DefinitionIcon", { link = "Special" })
hi(0, "Delimiter", { ctermfg = 219, fg = "#fc3488" })
hi(0, "DiagnosticError", { bg = "#5f0000", bold = true, ctermbg = 124, ctermfg = 231, fg = "#cdd3de" })
hi(0, "DiagnosticFloatingError", { link = "ErrorMsg" })
hi(0, "DiagnosticFloatingHint", { link = "HintMsg" })
hi(0, "DiagnosticFloatingInfo", { link = "InfoMsg" })
hi(0, "DiagnosticFloatingWarn", { link = "WarningMsg" })
hi(0, "DiagnosticHint", { bg = "#f4c069", bold = true, ctermbg = 221, ctermfg = 235, fg = "#1f292d" })
hi(0, "DiagnosticInfo", { bg = "#ffb7b7", bold = true, ctermbg = 217, ctermfg = 235, fg = "#1f292d" })
hi(0, "DiagnosticSignError", { link = "DiagnosticFloatingError" })
hi(0, "DiagnosticSignHint", { link = "DiagnosticFloatingHint" })
hi(0, "DiagnosticSignInfo", { link = "DiagnosticFloatingInfo" })
hi(0, "DiagnosticSignWarn", { link = "DiagnosticFloatingWarn" })
hi(0, "DiagnosticUnderlineError", { sp = "#e73c50", undercurl = true })
hi(0, "DiagnosticUnderlineHint", { sp = "#fc226e", undercurl = true })
hi(0, "DiagnosticUnderlineInfo", { sp = "#ffb7b7", undercurl = true })
hi(0, "DiagnosticUnderlineWarn", { sp = "#fd9720", undercurl = true })
hi(0, "DiagnosticWarn", { bg = "#fd9720", bold = true, ctermbg = 208, ctermfg = 235, fg = "#1f292d" })
hi(0, "DiffAdd", { bg = "#2d2e27", ctermbg = 236, ctermfg = 46, fg = "#a6e22e" })
hi(0, "DiffChange", {})
hi(0, "DiffDelete", { bg = "#2d2e27", ctermbg = 236, ctermfg = 205, fg = "#f75f5f" })
hi(0, "DiffText", { bg = "#2d2e27", ctermbg = 236, ctermfg = 227, fg = "#e6db74" })
hi(0, "Directory", { bold = true, ctermfg = 111, fg = "#95c5ff" })
hi(0, "EasyMotion", { link = "IncSearch" })
hi(0, "Error", { bg = "#5f0000", bold = true, ctermbg = 124, ctermfg = 231, fg = "#cdd3de" })
hi(0, "ErrorMsg", { bold = true, ctermfg = 203, fg = "#e73c50" })
hi(0, "Exception", { bold = true, ctermfg = 171, fg = "#ae81ff" })
hi(0, "FernBranchText", { link = "Directory" })
hi(0, "FloatBorder", { ctermfg = 244, fg = "#808080" })
hi(0, "FoldColumn", { bg = "#2d2e27", bold = true, ctermbg = 236 })
hi(0, "Folded", { bg = "#af60af", ctermbg = 133, ctermfg = 235, fg = "#1f292d", italic = true })
hi(0, "Function", { ctermfg = 46, fg = "#a6e22e" })
hi(0, "GitGutterAdd", { ctermfg = 46, fg = "#a6e22e" })
hi(0, "GitGutterChange", { ctermfg = 227, fg = "#e6db74" })
hi(0, "GitGutterChangeDelete", { ctermfg = 208, fg = "#fd9720" })
hi(0, "GitGutterDelete", { ctermfg = 203, fg = "#e73c50" })
hi(0, "GitSignsAdd", { link = "GitGutterAdd" })
hi(0, "GitSignsAddInline", { reverse = true })
hi(0, "GitSignsAddLn", { bg = "#2d2e27", ctermbg = 236, ctermfg = 46, fg = "#a6e22e" })
hi(0, "GitSignsAddLnInline", { reverse = true })
hi(0, "GitSignsAddLnVirtLn", { bg = "#2d2e27", ctermbg = 236, ctermfg = 46, fg = "#a6e22e" })
hi(0, "GitSignsAddLnVirtLnInLine", { reverse = true })
hi(0, "GitSignsAddNr", { ctermfg = 46, fg = "#a6e22e" })
hi(0, "GitSignsAddPreview", { bg = "#2d2e27", ctermbg = 236, ctermfg = 46, fg = "#a6e22e" })
hi(0, "GitSignsChange", { link = "GitGutterChange" })
hi(0, "GitSignsChangeInline", { reverse = true })
hi(0, "GitSignsChangeLnInline", { reverse = true })
hi(0, "GitSignsChangeNr", { ctermfg = 227, fg = "#e6db74" })
hi(0, "GitSignsChangeVirtLnInLine", { reverse = true })
hi(0, "GitSignsCurrentLineBlame", { ctermfg = 236, fg = "#2d2e27" })
hi(0, "GitSignsDelete", { link = "GitGutterDelete" })
hi(0, "GitSignsDeleteInline", { reverse = true })
hi(0, "GitSignsDeleteLnInline", { reverse = true })
hi(0, "GitSignsDeleteNr", { ctermfg = 203, fg = "#e73c50" })
hi(0, "GitSignsDeletePreview", { bg = "#2d2e27", ctermbg = 236, ctermfg = 205, fg = "#f75f5f" })
hi(0, "GitSignsDeleteVirtLn", { bg = "#2d2e27", ctermbg = 236, ctermfg = 205, fg = "#f75f5f" })
hi(0, "GitSignsDeleteVirtLnInLine", { reverse = true })
hi(0, "Hint", { bg = "#f4c069", bold = true, ctermbg = 221, ctermfg = 235, fg = "#1f292d" })
hi(0, "HintMsg", { ctermfg = 227, fg = "#e6db74", italic = true })
hi(0, "Identifier", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "Ignore", { ctermfg = 244, fg = "#808080" })
hi(0, "Include", { ctermfg = 219, fg = "#fc3488", nocombine = true })
hi(0, "IndentBlanklineChar", { ctermfg = 236, fg = "#2d2e27", nocombine = true })
hi(0, "IndentBlanklineSpaceChar", { link = "IndentBlanklineChar" })
hi(0, "IndentGuidesEven", { bg = "#808080", ctermbg = 244 })
hi(0, "IndentGuidesOdd", { bg = "#2d2e27", ctermbg = 236 })
hi(0, "Info", { bg = "#ffb7b7", bold = true, ctermbg = 217, ctermfg = 235, fg = "#1f292d" })
hi(0, "InfoMsg", { ctermfg = 221, fg = "#f4c069", italic = true })
hi(0, "JumpMotion", { link = "EasyMotion" })
hi(0, "Keyword", { ctermfg = 219, fg = "#fc3488" })
hi(0, "Label", { bold = true, ctermfg = 219, fg = "#fc3488" })
hi(0, "LineNr", { ctermfg = 250, fg = "#575b61" })
hi(0, "LspDiagnosticsDefaultError", { link = "DiagnosticError" })
hi(0, "LspDiagnosticsDefaultHint", { link = "DiagnosticHint" })
hi(0, "LspDiagnosticsDefaultInformation", { link = "DiagnosticInfo" })
hi(0, "LspDiagnosticsDefaultWarning", { link = "DiagnosticWarn" })
hi(0, "LspDiagnosticsFloatingError", { link = "DiagnosticFloatingError" })
hi(0, "LspDiagnosticsFloatingHint", { link = "DiagnosticFloatingHint" })
hi(0, "LspDiagnosticsFloatingInformation", { link = "DiagnosticFloatingInfo" })
hi(0, "LspDiagnosticsFloatingWarning", { link = "DiagnosticFloatingWarn" })
hi(0, "LspDiagnosticsSignError", { link = "DiagnosticSignError" })
hi(0, "LspDiagnosticsSignHint", { link = "DiagnosticSignHint" })
hi(0, "LspDiagnosticsSignInformation", { link = "DiagnosticSignInfo" })
hi(0, "LspDiagnosticsSignWarning", { link = "DiagnosticSignWarn" })
hi(0, "LspDiagnosticsUnderlineError", { link = "DiagnosticUnderlineError" })
hi(0, "LspDiagnosticsUnderlineHint", { link = "DiagnosticUnderlineHint" })
hi(0, "LspDiagnosticsUnderlineInfo", { link = "DiagnosticUnderlineInfo" })
hi(0, "LspDiagnosticsUnderlineWarning", { link = "DiagnosticUnderlineWarn" })
hi(0, "LspInfoBorder", { bold = true, ctermfg = 219, fg = "#fc3488" })
hi(0, "LspInfoFiletype", { ctermfg = 80, fg = "#66d9ef" })
hi(0, "LspInfoList", { ctermfg = 46, fg = "#a6e22e" })
hi(0, "LspInfoTip", { ctermfg = 244, fg = "#808080", italic = true })
hi(0, "LspInfoTitle", { bold = true })
hi(0, "Macro", { ctermfg = 46, fg = "#a6e22e", italic = true })
hi(0, "MatchParen", { bold = true, ctermfg = 227, fg = "#e6db74", underline = true })
hi(0, "MiniClueBorder", { ctermfg = 244, fg = "#808080" })
hi(0, "MiniClueDescGroup", { bold = true, ctermfg = 208, fg = "#fd9720" })
hi(0, "MiniClueDescSingle", { bg = "#383a3e", ctermbg = 239, ctermfg = 231, fg = "#cdd3de" })
hi(0, "MiniClueNextKey", { ctermfg = 227, fg = "#e6db74", italic = true })
hi(0, "MiniClueNextKeyWithPostkeys", { bold = true, ctermfg = 203, fg = "#e73c50" })
hi(0, "MiniClueSeparator", { ctermfg = 221, fg = "#f4c069", italic = true })
hi(0, "MiniClueTitle", { bold = true })
hi(0, "MiniCompletionActiveParameter", { underline = true })
hi(0, "MiniCursorword", { underline = true })
hi(0, "MiniCursorwordCurrent", { underline = true })
hi(0, "MiniHipatternsFixme", { bg = "#5f0000", bold = true, ctermbg = 124, ctermfg = 231, fg = "#cdd3de" })
hi(0, "MiniHipatternsHack", { bg = "#fd9720", bold = true, ctermbg = 208, ctermfg = 235, fg = "#1f292d" })
hi(0, "MiniHipatternsNote", { bg = "#f4c069", bold = true, ctermbg = 221, ctermfg = 235, fg = "#1f292d" })
hi(0, "MiniHipatternsTodo", { bg = "#ffb7b7", bold = true, ctermbg = 217, ctermfg = 235, fg = "#1f292d" })
hi(0, "MiniIndentscopeSymbol", { ctermfg = 219, fg = "#fc3488" })
hi(0, "MiniIndentscopeSymbolOff", { ctermfg = 219, fg = "#fc3488" })
hi(0, "MiniJump", { sp = "#fd9720", undercurl = true })
hi(0, "MiniMapNormal", { bg = "#383a3e", ctermbg = 239, ctermfg = 231, fg = "#cdd3de" })
hi(0, "MiniMapSymbolCount", { bold = true, ctermfg = 219, fg = "#fc3488" })
hi(0, "MiniMapSymbolLine", { bold = true })
hi(0, "MiniMapSymbolView", { ctermfg = 219, fg = "#fc3488" })
hi(0, "MiniOperatorsExchangeFrom", { reverse = true })
hi(0, "MiniStarterCurrent", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "MiniStarterFooter", { bold = true })
hi(0, "MiniStarterHeader", { bold = true })
hi(0, "MiniStarterInactive", { ctermfg = 244, fg = "#808080", italic = true })
hi(0, "MiniStarterItem", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "MiniStarterItemBullet", { ctermfg = 219, fg = "#fc3488" })
hi(0, "MiniStarterItemPrefix", { bold = true, ctermfg = 208, fg = "#fd9720" })
hi(0, "MiniStarterQuery", { bold = true, ctermfg = 121, fg = "#2e8b57" })
hi(0, "MiniStarterSection", { ctermfg = 219, fg = "#fc3488" })
hi(0, "MiniStatuslineDevinfo", { bg = "#2d2e27", ctermbg = 236, ctermfg = 250, fg = "#575b61" })
hi(0, "MiniStatuslineFileinfo", { bg = "#2d2e27", ctermbg = 236, ctermfg = 250, fg = "#575b61" })
hi(0, "MiniStatuslineFilename", { bg = "#2d2e27", ctermbg = 236, ctermfg = 244, fg = "#808080" })
hi(0, "MiniStatuslineInactive", { bg = "#2d2e27", ctermbg = 236, ctermfg = 244, fg = "#808080" })
hi(0, "MiniStatuslineModeCommand", { bg = "#2d2e27", ctermbg = 236, ctermfg = 227, fg = "#e6db74" })
hi(0, "MiniStatuslineModeInsert", {})
hi(0, "MiniStatuslineModeNormal", { reverse = true })
hi(0, "MiniStatuslineModeOther", { reverse = true })
hi(0, "MiniStatuslineModeReplace", { bg = "#2d2e27", ctermbg = 236, ctermfg = 205, fg = "#f75f5f" })
hi(0, "MiniStatuslineModeVisual", { bg = "#2d2e27", ctermbg = 236, ctermfg = 46, fg = "#a6e22e" })
hi(0, "MiniSurround", { reverse = true })
hi(0, "MiniTablineCurrent", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "MiniTablineFill", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "MiniTablineHidden", { bg = "#2d2e27", ctermbg = 236, ctermfg = 231, fg = "#cdd3de" })
hi(0, "MiniTablineModifiedCurrent", { bg = "#2d2e27", ctermbg = 236, ctermfg = 250, fg = "#575b61" })
hi(0, "MiniTablineModifiedHidden", { bg = "#2d2e27", ctermbg = 236, ctermfg = 244, fg = "#808080" })
hi(0, "MiniTablineModifiedVisible", { bg = "#2d2e27", ctermbg = 236, ctermfg = 250, fg = "#575b61" })
hi(0, "MiniTablineTabpagesection", { sp = "#cdd3de", underline = true })
hi(0, "MiniTablineVisible", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "MiniTrailspace", { bg = "#5f0000", bold = true, ctermbg = 124, ctermfg = 231, fg = "#cdd3de" })
hi(0, "ModeMsg", { ctermfg = 227, fg = "#e6db74" })
hi(0, "NERDTreeCWD", { link = "Label" })
hi(0, "NERDTreeClosable", { link = "NERDTreeOpenable" })
hi(0, "NERDTreeDir", { link = "Directory" })
hi(0, "NERDTreeDirSlash", { link = "Delimiter" })
hi(0, "NERDTreeExecFile", { link = "Function" })
hi(0, "NERDTreeLinkTarget", { link = "Tag" })
hi(0, "NERDTreeOpenable", { link = "NERDTreeDir" })
hi(0, "NERDTreeUp", { link = "Operator" })
hi(0, "Noise", { link = "Delimiter" })
hi(0, "NonText", { ctermfg = 236, fg = "#2d2e27" })
hi(0, "Normal", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "Number", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "NvimTreeBookmark", { fg = "#ffa0a0" })
hi(0, "NvimTreeExecFile", { bold = true, fg = "#ffa0a0" })
hi(0, "NvimTreeFolderIcon", { fg = "#8094b4" })
hi(0, "NvimTreeGitDeleted", { ctermfg = 236, fg = "#2d2e27" })
hi(0, "NvimTreeGitDirty", { ctermfg = 208, fg = "#fd9720" })
hi(0, "NvimTreeGitIgnored", { link = "Ignore" })
hi(0, "NvimTreeGitMerge", { fg = "#fc669b" })
hi(0, "NvimTreeGitNew", { ctermfg = 236, fg = "#2d2e27" })
hi(0, "NvimTreeGitRenamed", { fg = "#fc669b" })
hi(0, "NvimTreeGitStaged", { ctermfg = 80, fg = "#66d9ef" })
hi(0, "NvimTreeImageFile", { bold = true, fg = "#ff80ff" })
hi(0, "NvimTreeIndentMarker", { fg = "#8094b4" })
hi(0, "NvimTreeLiveFilterPrefix", { bold = true, fg = "#ff80ff" })
hi(0, "NvimTreeLiveFilterValue", { bold = true })
hi(0, "NvimTreeModifiedFile", { fg = "#ffa0a0" })
hi(0, "NvimTreeOpenedFile", { bold = true, fg = "#ffa0a0" })
hi(0, "NvimTreeRootFolder", { fg = "#ff80ff" })
hi(0, "NvimTreeSpecialFile", { bold = true, fg = "#ff80ff", underline = true })
hi(0, "NvimTreeSymlink", { bold = true, fg = "#ffff60" })
hi(0, "NvimTreeWindowPicker", { bg = "#4493c8", bold = true, fg = "#ededed" })
hi(0, "Operator", { ctermfg = 219, fg = "#fc3488" })
hi(0, "OperatorSandwichChange", { link = "DiffText" })
hi(0, "Pmenu", { bg = "#383a3e", ctermbg = 239, ctermfg = 231, fg = "#cdd3de" })
hi(0, "PmenuSbar", { bg = "#2d2e27", ctermbg = 236 })
hi(0, "PmenuSel", { bg = "#f0af00", ctermbg = 214, ctermfg = 235, fg = "#1f292d" })
hi(0, "PmenuThumb", { bg = "#ae81ff", ctermbg = 171 })
hi(0, "PreCondit", { ctermfg = 219, fg = "#fc3488", italic = true })
hi(0, "PreProc", { ctermfg = 46, fg = "#a6e22e" })
hi(0, "Question", { ctermfg = 214, fg = "#f0af00", underline = true })
hi(0, "QuickFixLine", { bg = "#2d2e27", ctermbg = 236 })
hi(0, "ReferencesCount", { link = "Number" })
hi(0, "ReferencesIcon", { link = "DefinitionIcon" })
hi(0, "Repeat", { ctermfg = 219, fg = "#fc3488", italic = true })
hi(0, "Search", { sp = "#cdd3de", underline = true })
hi(0, "SignColumn", {})
hi(0, "SignifySignAdd", { link = "GitGutterAdd" })
hi(0, "SignifySignChange", { link = "GitGutterChange" })
hi(0, "SignifySignChangeDelete", { link = "GitGutterChangeDelete" })
hi(0, "SignifySignDelete", { link = "GitGutterDelete" })
hi(0, "Special", { bold = true, ctermfg = 219, fg = "#fc3488" })
hi(0, "SpecialChar", { ctermfg = 219, fg = "#fc3488", italic = true })
hi(0, "SpecialComment", { bold = true, ctermfg = 250, fg = "#575b61", nocombine = true })
hi(0, "SpecialKey", { ctermfg = 208, fg = "#fd9720" })
hi(0, "SpellBad", { sp = "#e73c50", undercurl = true })
hi(0, "SpellCap", { sp = "#e6db74", undercurl = true })
hi(0, "SpellLocal", { sp = "#a6e22e", undercurl = true })
hi(0, "SpellRare", { sp = "#fd9720", undercurl = true })
hi(0, "Statement", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "StatusLine", { bg = "#2d2e27", ctermbg = 236, ctermfg = 250, fg = "#575b61" })
hi(0, "StatusLineNC", { bg = "#2d2e27", ctermbg = 236, ctermfg = 244, fg = "#808080" })
hi(0, "StatusLineTerm", { link = "StatusLine" })
hi(0, "StatusLineTermNC", { link = "StatusLineNC" })
hi(0, "StorageClass", { bold = true, ctermfg = 80, fg = "#66d9ef" })
hi(0, "String", { ctermfg = 227, fg = "#e6db74" })
hi(0, "Structure", { bold = true, ctermfg = 80, fg = "#66d9ef" })
hi(0, "TSConstBuiltin", { link = "Constant" })
hi(0, "TSConstructor", { link = "Typedef" })
hi(0, "TSFuncBuiltin", { link = "Function" })
hi(0, "TSStringEscape", { link = "Character" })
hi(0, "TSStringRegex", { link = "SpecialChar" })
hi(0, "TSURI", { link = "Tag" })
hi(0, "TSVariableBuiltin", { link = "Identifier" })
hi(0, "TabLine", { bg = "#2d2e27", ctermbg = 236, ctermfg = 231, fg = "#cdd3de" })
hi(0, "TabLineFill", { bg = "#1f292d", ctermbg = 235, ctermfg = 236, fg = "#2d2e27" })
hi(0, "TabLineSel", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "Tag", { link = "Underlined" })
hi(0, "TargetFileName", { link = "Directory" })
hi(0, "TargetWord", { link = "Title" })
hi(0, "TelescopeBorder", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopeMatching", { bold = true, ctermfg = 219, fg = "#fc3488" })
hi(0, "TelescopeMultiIcon", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopeMultiSelection", { ctermfg = 80, fg = "#66d9ef" })
hi(0, "TelescopeNormal", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopePreviewBlock", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopePreviewBorder", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopePreviewCharDev", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopePreviewDate", { bold = true, ctermfg = 111, fg = "#95c5ff" })
hi(0, "TelescopePreviewDirectory", { bold = true, ctermfg = 111, fg = "#95c5ff" })
hi(0, "TelescopePreviewExecute", { ctermfg = 227, fg = "#e6db74" })
hi(0, "TelescopePreviewGroup", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopePreviewHyphen", { ctermfg = 236, fg = "#2d2e27" })
hi(0, "TelescopePreviewLine", { reverse = true })
hi(0, "TelescopePreviewLink", { bold = true, ctermfg = 219, fg = "#fc3488" })
hi(0, "TelescopePreviewMatch", { sp = "#cdd3de", underline = true })
hi(0, "TelescopePreviewMessage", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopePreviewMessageFillchar", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopePreviewNormal", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopePreviewPipe", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopePreviewRead", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopePreviewSize", { ctermfg = 227, fg = "#e6db74" })
hi(0, "TelescopePreviewSocket", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopePreviewSticky", { ctermfg = 219, fg = "#fc3488" })
hi(0, "TelescopePreviewTitle", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopePreviewUser", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopePreviewWrite", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopePromptBorder", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopePromptCounter", { ctermfg = 236, fg = "#2d2e27" })
hi(0, "TelescopePromptNormal", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopePromptPrefix", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopePromptTitle", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopeResultsBorder", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopeResultsClass", { ctermfg = 46, fg = "#a6e22e" })
hi(0, "TelescopeResultsComment", { ctermfg = 244, fg = "#808080", italic = true })
hi(0, "TelescopeResultsConstant", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopeResultsDiffAdd", { bg = "#2d2e27", ctermbg = 236, ctermfg = 46, fg = "#a6e22e" })
hi(0, "TelescopeResultsDiffChange", {})
hi(0, "TelescopeResultsDiffDelete", { bg = "#2d2e27", ctermbg = 236, ctermfg = 205, fg = "#f75f5f" })
hi(0, "TelescopeResultsDiffUntracked", { ctermfg = 236, fg = "#2d2e27" })
hi(0, "TelescopeResultsField", { ctermfg = 46, fg = "#a6e22e" })
hi(0, "TelescopeResultsFunction", { ctermfg = 46, fg = "#a6e22e" })
hi(0, "TelescopeResultsIdentifier", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopeResultsLineNr", { ctermfg = 250, fg = "#575b61" })
hi(0, "TelescopeResultsMethod", {})
hi(0, "TelescopeResultsNormal", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopeResultsNumber", { ctermfg = 171, fg = "#ae81ff" })
hi(0, "TelescopeResultsOperator", { ctermfg = 219, fg = "#fc3488" })
hi(0, "TelescopeResultsSpecialComment", { bold = true, ctermfg = 250, fg = "#575b61", nocombine = true })
hi(0, "TelescopeResultsStruct", {})
hi(0, "TelescopeResultsTitle", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "TelescopeResultsVariable", { ctermfg = 219, fg = "#fc3488", italic = true })
hi(0, "TelescopeSelection", { reverse = true })
hi(0, "TelescopeSelectionCaret", { reverse = true })
hi(0, "TelescopeTitle", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "Title", { bold = true })
hi(0, "Todo", { bg = "#e6db74", bold = true, ctermbg = 227, ctermfg = 235, fg = "#1f292d" })
hi(0, "TodoBgFIX", { bg = "#e73c50", bold = true, ctermbg = 203, ctermfg = 235, fg = "#1f292d", italic = true, nocombine = true })
hi(0, "TodoBgHACK", { bg = "#e6db74", bold = true, ctermbg = 227, ctermfg = 235, fg = "#1f292d", italic = true, nocombine = true })
hi(0, "TodoBgNOTE", { bg = "#f4c069", bold = true, ctermbg = 221, ctermfg = 235, fg = "#1f292d", italic = true, nocombine = true })
hi(0, "TodoBgPERF", { bg = "#ffb7b7", bold = true, ctermbg = 217, ctermfg = 235, fg = "#1f292d", italic = true, nocombine = true })
hi(0, "TodoBgTODO", { bg = "#66d9ef", bold = true, ctermbg = 80, ctermfg = 235, fg = "#1f292d", italic = true, nocombine = true })
hi(0, "TodoBgWARN", { bg = "#fd9720", bold = true, ctermbg = 208, ctermfg = 235, fg = "#1f292d", italic = true, nocombine = true })
hi(0, "TodoFgFIX", { ctermfg = 203, fg = "#e73c50" })
hi(0, "TodoFgHACK", { ctermfg = 227, fg = "#e6db74" })
hi(0, "TodoFgNOTE", { link = "HintMsg" })
hi(0, "TodoFgPERF", { link = "InfoMsg" })
hi(0, "TodoFgTODO", { ctermfg = 80, fg = "#66d9ef", italic = true })
hi(0, "TodoFgWARN", { ctermfg = 208, fg = "#fd9720" })
hi(0, "TodoSignFIX", { link = "TodoFgFIX" })
hi(0, "TodoSignHACK", { link = "TodoFgHACK" })
hi(0, "TodoSignNOTE", { link = "TodoFgNOTE" })
hi(0, "TodoSignPERF", { link = "TodoFgPERF" })
hi(0, "TodoSignTODO", { link = "TodoFgTODO" })
hi(0, "TodoSignWARN", { link = "TodoFgWARN" })
hi(0, "TroubleCount", { ctermfg = 171, fg = "#ae81ff", underline = true })
hi(0, "Type", { ctermfg = 80, fg = "#66d9ef" })
hi(0, "Typedef", { ctermfg = 80, fg = "#66d9ef", italic = true })
hi(0, "UfoFoldedBg", { bg = "#a9a9a9" })
hi(0, "UfoFoldedFg", { fg = "#cdd3de" })
hi(0, "Underlined", { ctermfg = 48, fg = "#5cf19e", underline = true })
hi(0, "VertSplit", { ctermfg = 231, fg = "#cdd3de" })
hi(0, "Visual", { reverse = true })
hi(0, "VisualNOS", { bg = "#2d2e27", ctermbg = 236 })
hi(0, "Warning", { bg = "#fd9720", bold = true, ctermbg = 208, ctermfg = 235, fg = "#1f292d" })
hi(0, "WarningMsg", { bold = true, ctermfg = 208, fg = "#fd9720" })
hi(0, "WildMenu", { bg = "#f0af00", ctermbg = 214, ctermfg = 235, fg = "#1f292d" })
hi(0, "cConstant", { link = "Constant" })
hi(0, "cCustomClass", { link = "Type" })
hi(0, "coqConstructor", { link = "Constant" })
hi(0, "coqDefBinderType", { link = "coqDefType" })
hi(0, "coqDefContents1", { link = "coqConstructor" })
hi(0, "coqDefType", { link = "Typedef" })
hi(0, "coqIndBinderTerm", { link = "coqDefBinderType" })
hi(0, "coqIndConstructor", { link = "Delimiter" })
hi(0, "coqIndTerm", { link = "Type" })
hi(0, "coqKwd", { link = "Keyword" })
hi(0, "coqKwdParen", { link = "Function" })
hi(0, "coqProofDelim", { link = "coqVernacCmd" })
hi(0, "coqProofDot", { link = "coqTermPunctuation" })
hi(0, "coqProofPunctuation", { link = "coqTermPunctuation" })
hi(0, "coqRequire", { link = "Include" })
hi(0, "coqTactic", { link = "Operator" })
hi(0, "coqTermPunctuation", { link = "Delimiter" })
hi(0, "coqVernacCmd", { link = "Statement" })
hi(0, "coqVernacPunctuation", { link = "coqTermPunctuation" })
hi(0, "cppSTLexception", { link = "Exception" })
hi(0, "cppSTLnamespace", { link = "String" })
hi(0, "crontabDay", { link = "StorageClass" })
hi(0, "crontabDow", { link = "String" })
hi(0, "crontabHr", { link = "Number" })
hi(0, "crontabMin", { link = "Float" })
hi(0, "crontabMnth", { link = "Structure" })
hi(0, "csBraces", { link = "Delimiter" })
hi(0, "csClass", { link = "Structure" })
hi(0, "csClassType", { link = "Type" })
hi(0, "csContextualStatement", { link = "Conditional" })
hi(0, "csEndColon", { link = "Delimiter" })
hi(0, "csGeneric", { link = "Typedef" })
hi(0, "csInterpolation", { link = "Include" })
hi(0, "csInterpolationDelimiter", { link = "SpecialChar" })
hi(0, "csLogicSymbols", { link = "Operator" })
hi(0, "csModifier", { link = "Keyword" })
hi(0, "csNew", { link = "Operator" })
hi(0, "csNewType", { link = "Type" })
hi(0, "csParens", { link = "Delimiter" })
hi(0, "csPreCondit", { link = "PreProc" })
hi(0, "csQuote", { link = "Delimiter" })
hi(0, "csRepeat", { link = "Repeat" })
hi(0, "csStorage", { link = "StorageClass" })
hi(0, "csUnspecifiedStatement", { link = "Statement" })
hi(0, "csXmlTag", { link = "Define" })
hi(0, "csXmlTagName", { link = "Define" })
hi(0, "cssAtRule", { link = "PreCondit" })
hi(0, "cssAttr", { link = "Keyword" })
hi(0, "cssAttrComma", { link = "Noise" })
hi(0, "cssAttrRegion", { link = "Keyword" })
hi(0, "cssBraces", { link = "Delimiter" })
hi(0, "cssClassName", { link = "Identifier" })
hi(0, "cssClassNameDot", { link = "Noise" })
hi(0, "cssFlexibleBoxAttr", { link = "cssAttr" })
hi(0, "cssFunctionComma", { link = "Noise" })
hi(0, "cssImportant", { link = "Exception" })
hi(0, "cssNoise", { link = "Noise" })
hi(0, "cssProp", { link = "Label" })
hi(0, "cssPseudoClass", { link = "Special" })
hi(0, "cssPseudoClassId", { link = "cssSelectorOp" })
hi(0, "cssSelectorOp", { link = "Operator" })
hi(0, "cssTagName", { link = "Structure" })
hi(0, "cssUnitDecorators", { link = "Type" })
hi(0, "dartLibrary", { link = "Statement" })
hi(0, "debugBreakpoint", { link = "ErrorMsg" })
hi(0, "debugPC", { link = "ColorColumn" })
hi(0, "diffAdded", { link = "DiffAdd" })
hi(0, "diffRemoved", { link = "DiffDelete" })
hi(0, "dosiniHeader", { link = "Title" })
hi(0, "dosiniLabel", { link = "Label" })
hi(0, "dotKeyChar", { link = "Character" })
hi(0, "dotType", { link = "Type" })
hi(0, "gitcommitDiscardedFile", { link = "gitcommitSelectedFile" })
hi(0, "gitcommitHeader", { link = "SpecialComment" })
hi(0, "gitcommitOverFlow", { link = "Error" })
hi(0, "gitcommitSelectedFile", { link = "Directory" })
hi(0, "gitcommitSummary", { link = "Title" })
hi(0, "gitcommitUntrackedFile", { link = "gitcommitSelectedFile" })
hi(0, "gitconfigAssignment", { link = "String" })
hi(0, "gitconfigEscape", { link = "SpecialChar" })
hi(0, "gitconfigNone", { link = "Operator" })
hi(0, "gitconfigSection", { link = "Structure" })
hi(0, "gitconfigVariable", { link = "Label" })
hi(0, "gitrebaseBreak", { link = "Keyword" })
hi(0, "gitrebaseCommit", { link = "Tag" })
hi(0, "gitrebaseDrop", { link = "Exception" })
hi(0, "gitrebaseEdit", { link = "Define" })
hi(0, "gitrebaseExec", { link = "PreProc" })
hi(0, "gitrebaseFixup", { link = "gitrebaseSquash" })
hi(0, "gitrebaseMerge", { link = "PreProc" })
hi(0, "gitrebasePick", { link = "Include" })
hi(0, "gitrebaseReset", { link = "gitrebaseLabel" })
hi(0, "gitrebaseReword", { link = "gitrebasePick" })
hi(0, "gitrebaseSquash", { link = "Macro" })
hi(0, "gitrebaseSummary", { link = "Title" })
hi(0, "goBlock", { link = "Delimiter" })
hi(0, "goBoolean", { link = "Boolean" })
hi(0, "goBuiltins", { link = "Operator" })
hi(0, "goField", { link = "Identifier" })
hi(0, "goFloat", { link = "Float" })
hi(0, "goFormatSpecifier", { link = "Character" })
hi(0, "goFunction", { link = "Function" })
hi(0, "goFunctionCall", { link = "goFunction" })
hi(0, "goMethodCall", { link = "goFunctionCall" })
hi(0, "goParamType", { link = "goReceiverType" })
hi(0, "goPointerOperator", { link = "SpecialChar" })
hi(0, "goPredefinedIdentifiers", { link = "Constant" })
hi(0, "goReceiver", { link = "goBlock" })
hi(0, "goReceiverType", { link = "goTypeName" })
hi(0, "goSimpleParams", { link = "goBlock" })
hi(0, "goType", { link = "Type" })
hi(0, "goTypeConstructor", { link = "goFunction" })
hi(0, "goTypeName", { link = "Type" })
hi(0, "goVarAssign", { link = "Identifier" })
hi(0, "goVarDefs", { link = "goVarAssign" })
hi(0, "helpHeader", { link = "Label" })
hi(0, "helpHeadline", { link = "Title" })
hi(0, "helpHyperTextJump", { link = "Underlined" })
hi(0, "helpOption", { link = "Keyword" })
hi(0, "helpSectionDelim", { link = "Delimiter" })
hi(0, "htmlArg", { link = "Label" })
hi(0, "htmlBold", { bold = true, ctermfg = 231, fg = "#cdd3de" })
hi(0, "htmlEndTag", { link = "htmlTag" })
hi(0, "htmlH1", { link = "markdownH1" })
hi(0, "htmlH2", { link = "markdownH2" })
hi(0, "htmlH3", { link = "markdownH3" })
hi(0, "htmlH4", { link = "markdownH4" })
hi(0, "htmlH5", { link = "markdownH5" })
hi(0, "htmlH6", { link = "markdownH6" })
hi(0, "htmlItalic", { italic = true })
hi(0, "htmlSpecialTagName", { link = "Keyword" })
hi(0, "htmlTag", { link = "Special" })
hi(0, "htmlTagN", { link = "Typedef" })
hi(0, "htmlTagName", { link = "Type" })
hi(0, "htmlTitle", { link = "htmlBold" })
hi(0, "javaClassDecl", { link = "Structure" })
hi(0, "jsFuncBlock", { link = "Function" })
hi(0, "jsObjectKey", { link = "Type" })
hi(0, "jsReturn", { link = "Keyword" })
hi(0, "jsVariableDef", { link = "Identifier" })
hi(0, "jsonBraces", { link = "luaBraces" })
hi(0, "jsonEscape", { link = "SpecialChar" })
hi(0, "jsonKeywordMatch", { link = "Operator" })
hi(0, "jsonNull", { link = "Constant" })
hi(0, "jsonQuote", { link = "Delimiter" })
hi(0, "jsonString", { link = "String" })
hi(0, "jsonStringSQError", { link = "Exception" })
hi(0, "lCursor", { bg = "#cdd3de" })
hi(0, "luaBraces", { link = "Structure" })
hi(0, "luaBrackets", { link = "Delimiter" })
hi(0, "luaBuiltin", { link = "Keyword" })
hi(0, "luaComma", { link = "Delimiter" })
hi(0, "luaFuncArgName", { link = "Identifier" })
hi(0, "luaFuncCall", { link = "Function" })
hi(0, "luaFuncId", { link = "luaNoise" })
hi(0, "luaFuncKeyword", { link = "Type" })
hi(0, "luaFuncName", { link = "Function" })
hi(0, "luaFuncParens", { link = "Delimiter" })
hi(0, "luaFuncTable", { link = "Structure" })
hi(0, "luaIn", { link = "luaRepeat" })
hi(0, "luaLocal", { link = "Type" })
hi(0, "luaNoise", { link = "Delimiter" })
hi(0, "luaParens", { link = "Delimiter" })
hi(0, "luaSpecialTable", { link = "Structure" })
hi(0, "luaSpecialValue", { link = "Function" })
hi(0, "luaStringLongTag", { ctermfg = 219, fg = "#fc3488", italic = true })
hi(0, "makeCommands", { link = "Statment" })
hi(0, "makeSpecTarget", { link = "Type" })
hi(0, "manOptionDesc", { link = "Special" })
hi(0, "manReference", { link = "Tag" })
hi(0, "manUnderline", { link = "Label" })
hi(0, "markdownCode", { link = "mkdCode" })
hi(0, "markdownCodeDelimiter", { link = "mkdCodeDelimiter" })
hi(0, "markdownH1", { bold = true, ctermfg = 203, fg = "#e73c50" })
hi(0, "markdownH2", { bold = true, ctermfg = 208, fg = "#fd9720" })
hi(0, "markdownH3", { bold = true, ctermfg = 227, fg = "#e6db74" })
hi(0, "markdownH4", { bold = true, ctermfg = 113, fg = "#5f875f" })
hi(0, "markdownH5", { bold = true, ctermfg = 80, fg = "#66d9ef" })
hi(0, "markdownH6", { bold = true, ctermfg = 133, fg = "#af60af" })
hi(0, "markdownLinkDelimiter", { link = "Delimiter" })
hi(0, "markdownLinkTextDelimiter", { link = "markdownLinkDelimiter" })
hi(0, "markdownUrl", { link = "Underlined" })
hi(0, "mkdBold", { link = "Ignore" })
hi(0, "mkdBoldItalic", { link = "mkdBold" })
hi(0, "mkdCode", { link = "Keyword" })
hi(0, "mkdCodeDelimiter", { link = "mkdBold" })
hi(0, "mkdCodeEnd", { link = "mkdCodeStart" })
hi(0, "mkdCodeStart", { link = "mkdCodeDelimiter" })
hi(0, "mkdHeading", { link = "Delimiter" })
hi(0, "mkdItalic", { link = "mkdBold" })
hi(0, "mkdLineBreak", { link = "NonText" })
hi(0, "mkdListItem", { link = "Special" })
hi(0, "mkdRule", { ctermfg = 244, fg = "#808080", sp = "#fc3488", underline = true })
hi(0, "packerFail", { link = "ErrorMsg" })
hi(0, "packerHash", { link = "Number" })
hi(0, "packerPackageNotLoaded", { link = "Ignore" })
hi(0, "packerStatusFail", { link = "Statement" })
hi(0, "packerStatusSuccess", { link = "packerStatusFail" })
hi(0, "packerSuccess", { bold = true, ctermfg = 46, fg = "#a6e22e" })
hi(0, "plantumlArrowLR", { link = "Statement" })
hi(0, "plantumlMindmap", { link = "Label" })
hi(0, "plantumlMindmap2", { link = "Label" })
hi(0, "pythonBrackets", { link = "Delimiter" })
hi(0, "pythonBuiltinFunc", { link = "Operator" })
hi(0, "pythonBuiltinObj", { link = "Type" })
hi(0, "pythonBuiltinType", { link = "Type" })
hi(0, "pythonClass", { link = "Structure" })
hi(0, "pythonClassParameters", { link = "pythonParameters" })
hi(0, "pythonDecorator", { link = "PreProc" })
hi(0, "pythonDottedName", { link = "Identifier" })
hi(0, "pythonError", { link = "Error" })
hi(0, "pythonException", { link = "Exception" })
hi(0, "pythonInclude", { link = "Include" })
hi(0, "pythonIndentError", { link = "pythonError" })
hi(0, "pythonLambdaExpr", { link = "pythonOperator" })
hi(0, "pythonOperator", { link = "Operator" })
hi(0, "pythonParam", { link = "Identifier" })
hi(0, "pythonParameters", { link = "Delimiter" })
hi(0, "pythonSelf", { link = "Statement" })
hi(0, "pythonSpaceError", { link = "pythonError" })
hi(0, "pythonStatement", { link = "Statement" })
hi(0, "razorCode", { link = "PreProc" })
hi(0, "razorDelimiter", { link = "Delimiter" })
hi(0, "razorEventAttribute", { link = "PreCondit" })
hi(0, "razorFor", { link = "razorIf" })
hi(0, "razorIf", { link = "PreCondit" })
hi(0, "razorImplicitExpression", { link = "PreProc" })
hi(0, "razorLine", { link = "Constant" })
hi(0, "razorUsing", { link = "Include" })
hi(0, "razorcsLHSMemberAccessOperator", { link = "Noise" })
hi(0, "razorcsRHSMemberAccessOperator", { link = "razorcsLHSMemberAccessOperator" })
hi(0, "razorcsStringDelimiter", { link = "razorhtmlValueDelimiter" })
hi(0, "razorcsTypeNullable", { link = "Special" })
hi(0, "razorcsUnaryOperatorKeyword", { link = "Operator" })
hi(0, "razorhtmlAttribute", { link = "htmlArg" })
hi(0, "razorhtmlAttributeOperator", { link = "Operator" })
hi(0, "razorhtmlTag", { link = "htmlTag" })
hi(0, "razorhtmlValueDelimiter", { link = "Delimiter" })
hi(0, "rubyClass", { link = "Structure" })
hi(0, "rubyDefine", { link = "Define" })
hi(0, "rubyInterpolationDelimiter", { link = "Delimiter" })
hi(0, "rustIdentifier", { link = "Identifier" })
hi(0, "scalaKeyword", { link = "Keyword" })
hi(0, "scalaNameDefinition", { link = "Identifier" })
hi(0, "scssAmpersand", { link = "Special" })
hi(0, "scssAttribute", { link = "Noise" })
hi(0, "scssBoolean", { link = "Boolean" })
hi(0, "scssDefault", { link = "Keyword" })
hi(0, "scssDefinition", { link = "PreProc" })
hi(0, "scssElse", { link = "scssIf" })
hi(0, "scssIf", { link = "PreCondit" })
hi(0, "scssInclude", { link = "Include" })
hi(0, "scssMixinName", { ctermfg = 231, fg = "#cdd3de", italic = true })
hi(0, "scssSelectorChar", { link = "Delimiter" })
hi(0, "scssSelectorName", { link = "Identifier" })
hi(0, "scssVariable", { link = "Define" })
hi(0, "scssVariableAssignment", { link = "Operator" })
hi(0, "shDerefSimple", { link = "SpecialChar" })
hi(0, "shFunctionKey", { link = "Function" })
hi(0, "shLoop", { link = "Repeat" })
hi(0, "shParen", { link = "Delimiter" })
hi(0, "shQuote", { link = "Delimiter" })
hi(0, "shSet", { link = "Statement" })
hi(0, "shTestOpr", { link = "Debug" })
hi(0, "solBuiltinType", { link = "Type" })
hi(0, "solContract", { link = "Typedef" })
hi(0, "solContractName", { link = "Function" })
hi(0, "sqlKeyword", { link = "Keyword" })
hi(0, "sqlParen", { link = "Delimiter" })
hi(0, "sqlParenFunc", { link = "Function" })
hi(0, "sqlSpecial", { link = "Constant" })
hi(0, "sqlStatement", { link = "Statement" })
hi(0, "texMathRegion", { link = "Number" })
hi(0, "texMathRegionX", { link = "Number" })
hi(0, "texMathRegionXX", { link = "Number" })
hi(0, "texMathSub", { link = "Number" })
hi(0, "texMathSuper", { link = "Number" })
hi(0, "tomlComment", { link = "Comment" })
hi(0, "tomlDate", { link = "Special" })
hi(0, "tomlFloat", { link = "Float" })
hi(0, "tomlKey", { link = "Label" })
hi(0, "tomlTable", { link = "Structure" })
hi(0, "vimCmdSep", { link = "Delimiter" })
hi(0, "vimFgBgAttrib", { link = "Constant" })
hi(0, "vimFunction", { link = "Function" })
hi(0, "vimHiCterm", { link = "Label" })
hi(0, "vimHiCtermFgBg", { link = "vimHiCterm" })
hi(0, "vimHiGroup", { link = "Typedef" })
hi(0, "vimHiGui", { link = "vimHiCterm" })
hi(0, "vimHiGuiFgBg", { link = "vimHiGui" })
hi(0, "vimHiKeyList", { link = "Operator" })
hi(0, "vimIsCommand", { link = "Identifier" })
hi(0, "vimOption", { link = "Keyword" })
hi(0, "vimScriptDelim", { link = "Ignore" })
hi(0, "vimSet", { link = "String" })
hi(0, "vimSetEqual", { link = "Operator" })
hi(0, "vimSetSep", { link = "Delimiter" })
hi(0, "vimUserFunc", { link = "vimFunction" })
hi(0, "xmlAttrib", { link = "htmlArg" })
hi(0, "xmlEndTag", { link = "xmlTag" })
hi(0, "xmlEqual", { link = "Operator" })
hi(0, "xmlTag", { link = "htmlTag" })
hi(0, "xmlTagName", { link = "htmlTagName" })
hi(0, "xxdAddress", { link = "Label" })
hi(0, "xxdAscii", { link = "Character" })
hi(0, "xxdDot", { link = "Ignore" })
hi(0, "xxdSep", { link = "Delimiter" })
hi(0, "yamlKey", { link = "Label" })

-- Terminal colors
local g = vim.g

g.terminal_color_0 = "#1f292d"
g.terminal_color_1 = "#5f0000"
g.terminal_color_2 = "#5f875f"
g.terminal_color_3 = "#fd9720"
g.terminal_color_4 = "#37b6ff"
g.terminal_color_5 = "#fc669b"
g.terminal_color_6 = "#60afff"
g.terminal_color_7 = "#808080"
g.terminal_color_8 = "#383a3e"
g.terminal_color_9 = "#e73c50"
g.terminal_color_10 = "#a6e22e"
g.terminal_color_11 = "#e6db74"
g.terminal_color_12 = "#5cf19e"
g.terminal_color_13 = "#ae81ff"
g.terminal_color_14 = "#66d9ef"
g.terminal_color_15 = "#575b61"
