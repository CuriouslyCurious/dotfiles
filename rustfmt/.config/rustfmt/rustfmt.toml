# Maximum length of comments. No effect unlesswrap_comments = true.
comment_width = 80
# Specifies which edition is used by the parser.
edition = "2021"
# The maximum length of enum variant having discriminant, that gets vertically aligned with others.
# Variants without discriminants would be ignored for the purpose of alignment.
enum_discrim_align_threshold = 20
# Put single-expression functions on a single line
fn_single_line = true
# Format code snippet included in doc comments.
format_code_in_doc_comments = true
# Format the metavariable matching patterns in macros.
format_macro_matchers = true
# Format the bodies of macros.
format_macro_bodies = true
# How imports should be grouped into use statements. Imports will be merged or split to the configured # level of granularity.
imports_granularity = "Module"
# Convert /* */ comments to // comments where possible
normalize_comments = true
# Convert #![doc] and #[doc] attributes to //! and /// doc comments.
normalize_doc_attributes = true
# Reorder impl items. type and const are put first, then macros and methods.
reorder_impl_items = true
# Controls the strategy for how consecutive imports are grouped together.
group_imports = "StdExternalCrate"
# Use field initialize shorthand if possible.
use_field_init_shorthand = true
# Which version of the formatting rules to use. Version::One is backwards-compatible with Rustfmt 1.0.
# Other versions are only backwards compatible within a major version number.
version = "Two"
# Break comments to fit on the line
wrap_comments = true

